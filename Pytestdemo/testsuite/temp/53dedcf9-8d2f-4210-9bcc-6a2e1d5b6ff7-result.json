{"name": "正常流程", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <webdemo1.test_03.TestDemo object at 0x000001F200086670>\ncase = <comm.excel_Utils.CaseData object at 0x000001F200017220>\n\n    @allure.description(\"用户登录接口\")\n    @pytest.mark.parametrize('case', cases)\n    def test_login(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url,name='接口路径')\n        allure.attach(body=case.case_data,name='请求参数')\n        respons = requests.post(url=case.url, data=eval(case.case_data))\n>       res_body = respons.json()\n\ntest_03.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\Python\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nD:\\Python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001F27DEA0A60>\ns = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n\\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\\n\\t<meta name=\"r...er-downloads\" class=\"ie_updater_ie\" target=\"_blank\">IE 10.0以上</a>\\n  \\t</div>\\n</div>\\n<![endif] -->\\n</body>\\n</html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\Python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "description": "用户登录接口", "attachments": [{"name": "接口路径", "source": "a96a4790-a09f-4ffb-9bba-6a458490c359-attachment.attach"}, {"name": "请求参数", "source": "c4dd7f91-3bb1-4ed9-9777-c23360dfe909-attachment.attach"}], "parameters": [{"name": "case", "value": "<comm.excel_Utils.CaseData object at 0x000001F200017220>"}], "start": 1647925685966, "stop": 1647925686045, "uuid": "8e48921f-e16d-4b05-b09e-fb9c7d690dfc", "historyId": "086014672f423a09822731ae0a909622", "testCaseId": "77d530dcc996062642b5943adb4dec33", "fullName": "webdemo1.test_03.TestDemo#test_login", "labels": [{"name": "feature", "value": "用户登录模块"}, {"name": "parentSuite", "value": "webdemo1"}, {"name": "suite", "value": "test_03"}, {"name": "subSuite", "value": "TestDemo"}, {"name": "host", "value": "小扁豆"}, {"name": "thread", "value": "16936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "webdemo1.test_03"}]}